#!/bin/bash

set -e

function log_info() {
    printf "\e[34m\e[1m[INFO]\e[0m $*\n"
}

function log_warn() {
    printf "\033[0;33m[WARN]\e[0m $*\n"
}

function log_error() {
    printf "\033[0;31m[ERROR]\e[0m $*\n"
}

function log_ok() {
    printf "\e[32m\e[1m[ OK ]\e[0m $*\n"
}

function color_info() {
    echo -e "\e[34m\e[1m$*\e[0m"
}

function color_warn() {
    echo -e "\033[0;33m$*\e[0m"
}

function color_error() {
    echo -e "\033[0;31m$*\e[0m"
}

function color_ok() {
    echo -e "\e[32m\e[1m$*\e[0m"
}

blade_dir=$(cd $(dirname $0) && pwd)
cd $blade_dir

# 生成版本号, 通过 blade --version 获取
function blade_version() {
    local branch
    local version
    local log
    branch=$(git branch | grep '^\*')
    if echo "$branch" | egrep 'detached (at|from)' > /dev/null; then
        # Extract tag name
        version=$(echo "$branch" | sed -E -n 's/\* \(.* detached (at|from) (.*)\)/\2/p')
    else
        version=$(echo "$branch" | sed -n 's/\* \(.*\)$/("\1" branch)/p')
    fi
    # get last commit brief
    log=$(git log -1 --format="%ad %h, by %cn" --date=short)

    # Examples:
    #   2.0.0, 2019-03-16 3b2ad0d, by CHEN Feng
    #   ("version" branch), 2019-03-16 3b2ad0d, by CHEN Feng
    echo "$version, $log"
}
version=$(blade_version)
cd $blade_dir
src_dir='./src'
cd $src_dir
echo "VERSION = r'''$version'''" > blade/blade_version.py

# 安装 vim scripts
log_info "Installing vim scripts..."
mkdir -p ~/.vim/{syntax,ftdetect,indent}
ln -svf $blade_dir/vim/ftdetect/* ~/.vim/ftdetect/
ln -svf $blade_dir/vim/syntax/* ~/.vim/syntax/
ln -svf $blade_dir/vim/indent/* ~/.vim/indent/

# 安装 blade auxiliary tools 到 ~/bin
mkdir -p ~/bin
log_info "Installing blade auxiliary tools..."
ln -svf $blade_dir/tool/{genlibbuild,lsnobuild,lsrc,merge-static-libs,bladefunctions} ~/bin
if [ ! -f ~/.bashrc ] || ! grep "bladefunctions" ~/.bashrc 2>&1 >/dev/null; then
    echo "test -s ~/bladefunctions && . ~/bladefunctions || true" >> ~/.bashrc
fi

# 安装 blade
log_info "Installing blade..."
ln -svf $blade_dir/blade ~/bin

if ! echo $PATH | grep "$HOME/bin" &> /dev/null; then
    profile=~/.bashrc
    if echo $SHELL | grep "zsh" &> /dev/null; then
        profile=~/.zshrc
    fi
    echo 'export PATH=$HOME/bin:$PATH' >> $profile
    echo
    echo "To apply the changes:"
    echo "  source $profile      # For current terminal session only"
    echo "  Or start a new terminal window for permanent effect"
    echo
    echo "The PATH has been updated to include $HOME/bin"
fi
log_ok "Install success"
