# 指定基础镜像
FROM nvcr.io/nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04

# 使得安装过程中的所有用户交互都变为非交互式, 即选择默认选项
# ENV DEBIAN_FRONTEND=noninteractive
ARG DEBIAN_FRONTEND=noninteractive

# 更新依赖
RUN apt-get update

# 安装依赖
RUN apt-get install -y --fix-missing \
    build-essential \
    git \
    curl \
    ninja-build \
    vim \
    sudo \
    bear \
    uuid-dev \
    python-is-python3 \
    python3-pip \
    htop \
    iputils-ping \
    ccache \
    luarocks \
    cmake \
    make \
    unzip \
    wget

# example 需要的依赖
RUN sudo apt install -y --fix-missing \
    google-perftools libgoogle-perftools-dev \
    openjdk-11-jdk \
    thrift-compiler libthrift-dev \
    bison \
    flex \
    protobuf-compiler \
    libboost-all-dev

# 配置代理
RUN cat <<'EOF' >> /etc/bash.bashrc

############################# add proxy
# @see https://forums.docker.com/t/connection-refused-on-host-docker-internal/136925/8
export hostip="host.docker.internal"
export socks_hostport=7890
export http_hostport=7890
alias proxy='
    export https_proxy="http://${hostip}:${http_hostport}"
    export http_proxy="http://${hostip}:${http_hostport}"
    export ALL_PROXY="socks5://${hostip}:${socks_hostport}"
    export all_proxy="socks5://${hostip}:${socks_hostport}"
'
alias unproxy='
    unset ALL_PROXY
    unset https_proxy
    unset http_proxy
    unset all_proxy
'
alias echoproxy='
    echo $ALL_PROXY
    echo $all_proxy
    echo $https_proxy
    echo $http_proxy
'
############################# end proxy
EOF

# 以当前用户进入 docker
ARG USER_NAME
RUN useradd -m ${USER_NAME}
RUN echo "root:0000" | chpasswd
RUN echo "${USER_NAME}:0000" | chpasswd
RUN echo "${USER_NAME} ALL=NOPASSWD: ALL" >> /etc/sudoers
USER ${USER_NAME}
ENV PATH=${PATH}:/home/${USER_NAME}/.local/bin

# test 依赖
RUN python3 -m pip install coverage==7.10.6 coveralls==4.0.1 pylint==3.3.8
